(()=>{"use strict";var e={855:(e,t,n)=>{const r=require("child_process"),i=require("https");var o=n.n(i);const s=require("fs");var a=n.n(s);const c=require("path");var l=n.n(c);const p=JSON.parse("{\"ApiManager\":\"import{instance as axios}from'./instance';\\n\\nimport*as services from'./services'\\n\\n;export class ApiManager{static interceptors={request:[],response:[],error:[],};\\n\\n{servicesFields}\\n\\nconstructor(){if(!ApiManager.instance){ApiManager.instance=this}return ApiManager.instance}\\n\\n{servicesGetters}\\n\\nproxyService(apiService){const proxyHandler={get:(target,key)=>{if(target[key]!==null){if(typeof target[key]==='function'){return async(...payload)=>{await this.onRequest();try{const responseData=await target[key](...payload);await this.onResponse();return responseData}catch(error){throw await this.onError(error);}}}else if(typeof target[key]==='object'){return this.proxyService(target[key])}}else{throw`Incorrect field type:${key}`}},};return new Proxy(apiService,proxyHandler)}async onRequest(){return await Promise.all(ApiManager.interceptors.request)}async onResponse(){return await Promise.all(ApiManager.interceptors.response)}async onError(error){await Promise.all(ApiManager.interceptors.error);return error}logout(){axios.defaults.headers.Authorization=''}}\",\"instance\":\"import axios from'axios'\\n\\n;const getAccessToken=()=>{return localStorage.getItem('EXAMPLE_NAME')};const accessToken=getAccessToken();export const instance=axios.create({baseURL:process.env.API_URL,headers:{Accept:'application/json',...(accessToken?{Authorization:`Bearer ${accessToken}`}:{}),},});\\n\"}"),u=["abstract","arguments","await","boolean","break","byte","case","catch","char","class","const","continue","debugger","default","delete","do","double","else","enum","eval","export","extends","false","final","finally","float","for","function","goto","if","implements","import","in","instanceof","int","interface","let","long","native","new","null","package","private","protected","public","return","short","static","super","switch","synchronized","this","throw","throws","transient","true","try","typeof","var","void","volatile","while","with","yield"],d=n(521),f=()=>d.createInterface({input:process.stdin,output:process.stdout}),y=async e=>{const t=f();return await new Promise((n=>t.question(e,(e=>{n(e),t.close()}))))};(async()=>{const e=process.argv.find((e=>/^--outdir/.test(e)))?.split("=")[1],t=await(async()=>{const e=f(),t=await new Promise((t=>e.question("Put your postman documentation link: ",(n=>{t(n),e.close()}))));return`/api/collections/${new URL(t).pathname.split("/").slice(-2).join("/")}?segregateAuth=true&versionTag=latest`})().catch((()=>null)),n="./src/api",i=e??await y("Choose a destination directory (default: ./src/api): ").then((e=>e||n)).catch((()=>n));if(!t)throw new Error("Incorrect URL");const s={hostname:"documenter.gw.postman.com",port:443,path:t,method:"GET"};function c(e){if(e.item)return e.item.reduce(((e,t)=>{var n;return e[(e=>[/\//g,/\\/g,/\[/g,/\]/g].reduce(((e,t)=>e.replace(t,"")),e))((n=(e=>{const t={Ё:"YO",Й:"I",Ц:"TS",У:"U",К:"K",Е:"E",Н:"N",Г:"G",Ш:"SH",Щ:"SCH",З:"Z",Х:"H",Ъ:"",ё:"yo",й:"i",ц:"ts",у:"u",к:"k",е:"e",н:"n",г:"g",ш:"sh",щ:"sch",з:"z",х:"h",ъ:"",Ф:"F",Ы:"I",В:"V",А:"a",П:"P",Р:"R",О:"O",Л:"L",Д:"D",Ж:"ZH",Э:"E",ф:"f",ы:"i",в:"v",а:"a",п:"p",р:"r",о:"o",л:"l",д:"d",ж:"zh",э:"e",Я:"Ya",Ч:"CH",С:"S",М:"M",И:"I",Т:"T",Ь:"",Б:"B",Ю:"YU",я:"ya",ч:"ch",с:"s",м:"m",и:"i",т:"t",ь:"",б:"b",ю:"yu"};return e.split("").map((e=>void 0===t[e]?e:t[e])).join("")})(t.name),n.split(" ").map(((e,t)=>e.charAt(0)[0===t?"toLowerCase":"toUpperCase"]()+e.slice(1))).join("")))]=c(t),e}),{});if(e.request){const{method:t,urlObject:n,body:r}=e.request;if(t&&n&&n.path&&n.path.length){const e=t.toLowerCase(),i=`const endpoint = '${n.path.join("/")}'; const response = await axios.${e}(\`\${apiPath}/\${endpoint}\`, {{body}}); return response.data;`;let o=`{fnName}: async () => {${i.replace("{body}","")}}\n`;if(r?.formdata){const e=[...r.formdata].sort(((e,t)=>Number(/required/.test(t.description))-Number(/required/.test(e.description)))),t=[],n=/\[(.*)\]/g;let s="",a="",c="";for(let r=0;r<e.length;r++){let{key:i,description:o}=e[r],l=!1;if(t.some((e=>e.includes(i))))return;if(n.test(i)){if(i=i.replace(n,""),t.includes(i))continue;t.push(i),o=(/required/.test(o)?"required":"")+" in:"}u.includes(i)&&(l=!0,i=`_${i}`),a+=`${l?`${i.replace(/^_/,"")} : ${i}`:i},`,c+=`${i} ${/required/.test(o)?"":" = undefined"},`,/\W(int|float)\W/.test(o)?s+=`\n* @param {number} ${i}`:/\Wstring\W/.test(o)?s+=`\n* @param {string} ${i}`:/\Win:\W/.test(o)?s+=`\n* @param {any[]} ${i}`:s+=`\n* @param {any} ${i}`,0===r&&(s=s.replace(/\n/,""))}o=`/**\n${s}\n*/\n '{fnName}': async (${c}) => {${i.replace("{body}",a)}}\n`}else if(n.query&&n.query.length){const e=n.query;let t="",r="",s="";for(let n=0;n<e.length;n++){let{key:i}=e[n],o=!1;u.includes(i)&&(o=!0,i=`_${i}`),t+=`\n* @param {any} ${i}`,r+=`${o?`${i.replace(/^_/,"")} : ${i}`:i},`,s+=`${i} = undefined,`,0===n&&(t=t.replace(/\n/,""))}o=`/**\n${t}\n*/\n '{fnName}': async (${s}) => {${i.replace("{body}",`params: {${r}}`)}}\n`}return o}}}async function d(e){const t=c(e),n=l().join(i,"../");if(a().readdirSync(n).find((e=>e===i.split("/").pop()))){const t=await y(`WARNING: ${i} directory will be removed. Are you sure you want to continue? (y/n): `);if("y"!==t&&"yes"!==t){if("n"===t||"no"===t)throw new Error("Canceled");return d(e)}a().rmSync(i,{recursive:!0})}return a().mkdirSync(i),a().readdirSync(i).find((e=>"services"===e))||a().mkdirSync(l().join(i,"services")),function(e,t=i){const n=JSON.parse(JSON.stringify(e)),r=(e,t,n)=>{let i="";"object"==typeof t?i=Object.entries(t).reduce(((e,[t,i])=>{if("string"==typeof i)e+=i.replace("{fnName}",t)+",\n";else if("object"==typeof i){const e=l().join(n,t);a().mkdirSync(e),r(t,i,e)}return e}),""):"string"==typeof t&&(i=t),a().writeFileSync(`${n}/index.js`,((e,t)=>`/**{importsRow}*/\n\n export const ${e} = (apiPath = '') => ({/**{servicesRow}*/\n\n${t}\n});\n`)(e,i))};Object.entries(n).forEach((([e,i])=>{const o=l().join(t,e);a().mkdirSync(o),"object"==typeof i&&(r(e,i,o),delete n[e])}));const o=Object.entries(n);o.length&&(o.forEach((([e])=>{a().rmdirSync(l().join(t,e))})),r("rootRequests",{rootRequests:{...n}},t))}(t,l().join(i,"services")),t}function m(e,t=i){return e.reduce(((e,n)=>{if(n.isDirectory()){const r=l().join(t,n.name),i=function(e){const t=a().readdirSync(e,{withFileTypes:!0});return 1===t.length&&t[0].isFile()}(r);return{...e,[n.name]:{containSubServices:!i,...i?{}:m(a().readdirSync(r,{withFileTypes:!0}),r)}}}return e}),{})}function h(e){return Object.entries(e).reduce(((e,[t,n])=>n.containSubServices?{...e,[t]:{items:Object.entries(n).filter((([e])=>"containSubServices"!==e)).map((([e,t])=>t.containSubServices?h({[e]:t}):{[e]:null}))}}:e),{})}function g(e,t=i){Object.entries(e).forEach((([e,n])=>{const r=l().join(t,e),i=l().join(r,"index.js"),o=a().readFileSync(i,{encoding:"utf8"});let s="import { instance as axios } from '@/api/instance';\n\n",c="";for(let e=0;e<n.items.length;e++){const t=n.items[e],[i]=Object.entries(t),[o,a]=i,l=`${o}Service`;s+=`import {${o} as ${l}} from './${o}';`,c+=`${o}: ${l}(),`,a&&g(t,r)}const p=o.replace("/**{importsRow}*/",s).replace("/**{servicesRow}*/",c);a().writeFileSync(i,p,{encoding:"utf8"})}))}function w(e,t=i){return[...e.filter((e=>e.isFile())).map((e=>l().join(t,e.name))),...e.filter((e=>e.isDirectory())).flatMap((e=>w(a().readdirSync(l().join(t,e.name),{withFileTypes:!0}),l().join(t,e.name))))]}o().request(s,(e=>{console.log("Fetching data from server...");let t="";e.on("data",(e=>{t+=e})),e.on("end",(async()=>{console.log("Data loaded!");const e=JSON.parse(t);console.log("Handling data...");try{await d(e),function(){const e=a().readdirSync(l().join(i,"services")).filter((e=>!/\.(js)$/.test(e)));!function(e){let t="",n="";for(let r=0;r<e.length;r++){const i=e[r];t+=`import {${i}} from './${i}';`,n+=`${i},`}const r=`${t}\n\nexport {${n}};\n`;a().writeFileSync(l().join(i,"/services/index.js"),r)}(e);let t="",n="";for(let r=0;r<e.length;r++){const i=e[r],o=`#${i}Service`;t+=`${o} = this.proxyService(services.${i}());`,n+=`/**\n* @returns {ReturnType<services.${i}>}\n*/\nget ${i} () { return this.${o} }`}Object.entries(p).forEach((([e,r])=>{"ApiManager"===e&&(r=(r=r.replace("{servicesFields}",t)).replace("{servicesGetters}",n)),a().writeFileSync(l().join(i,`${e}.js`),r)}))}(),function(){const e=l().join(i,"services");g(h(m(a().readdirSync(e,{withFileTypes:!0}),e)),e),w(a().readdirSync(e,{withFileTypes:!0}),e).forEach((e=>{const t=a().readFileSync(e,{encoding:"utf8"}).replace("/**{importsRow}*/","import { instance as axios } from '@/api/instance';\n\n").replace("/**{servicesRow}*/","");a().writeFileSync(e,t,{encoding:"utf8"})}))}(),console.log("API template generated!"),console.log("Formatting..."),(0,r.exec)('npx prettier --write "./**/api/**/*.js"'),console.log("Done!")}catch(e){console.error(e)}}))})).end()})()},521:e=>{e.exports=require("readline")}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var o=t[r]={exports:{}};return e[r](o,o.exports,n),o.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n(855)})();